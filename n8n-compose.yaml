services:
  n8n-init:
    image: docker.n8n.io/n8nio/n8n
    volumes:
      - ./n8n_data:/tmp/n8n_backup
    command: >
      sh -c "
        if [ ! -f /tmp/n8n_backup/package.json ]; then
          cp -r /home/node/.n8n/* /tmp/n8n_backup/
        fi
      "

  n8n:
    container_name: n8n
    build:
      context: .
      dockerfile: n8n.Dockerfile
    env_file:
      - .env
    environment:
      - N8N_HOST=${N8N_HOST}
      - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL}
      - NODE_FUNCTION_ALLOW_EXTERNAL=${NODE_FUNCTION_ALLOW_EXTERNAL}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - TZ=${TZ}
      - DB_TYPE=${DB_TYPE}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_SCHEMA=${DB_POSTGRESDB_SCHEMA}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
    volumes:
      - ./n8n-data:/home/node/.n8n
    depends_on:
      postgresql:
        condition: service_healthy
      n8n-init:
        condition: service_completed_successfully

    healthcheck:
      test:
        - CMD-SHELL
        - "wget -qO- http://127.0.0.1:5678/"
      interval: 5s
      timeout: 20s
      retries: 10
    ports:
      - "5678:5678"
    networks:
      - open-webui

  postgresql:
    container_name: n8n_postgresql
    image: "postgres:16-alpine"
    volumes:
      - ./postgresql-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_POSTGRESDB_USER}
      - POSTGRES_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - POSTGRES_DB=${DB_POSTGRESDB_DATABASE}
    healthcheck:
      test:
        - CMD-SHELL
        - "pg_isready -U n8n_user -d n8n"
      interval: 5s
      timeout: 20s
      retries: 10
    networks:
      - open-webui

networks:
  open-webui:
    external: true
